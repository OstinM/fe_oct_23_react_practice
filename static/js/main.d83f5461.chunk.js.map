{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","preparedProducts","categoryId","map","product","category","categoriesFromServer","find","productCategory","user","usersFromServer","person","categories","App","categoryOwner","setCategoryOwner","useState","filteredName","setFilteredName","filteredCategory","setFilteredCategory","visibleProducts","products","query","filterCategory","owner","preparedProductisList","filter","toLowerCase","includes","trim","getFilteredList","className","href","cn","onClick","type","placeholder","value","onChange","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"uPAAe,GACb,CAAEA,GAAI,EAAGC,KAAM,OAAQC,IAAK,KAC5B,CAAEF,GAAI,EAAGC,KAAM,OAAQC,IAAK,KAC5B,CAAEF,GAAI,EAAGC,KAAM,MAAOC,IAAK,KAC3B,CAAEF,GAAI,EAAGC,KAAM,OAAQC,IAAK,MCJf,GACb,CACEF,GAAI,EACJG,MAAO,UACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,SACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,SACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,cACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,UACPC,KAAM,eACNC,QAAS,I,OCrBb,MAAMC,ECRS,CACb,CACEN,GAAI,EACJC,KAAM,OACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,QACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,OACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,SACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,QACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,SACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,OACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,QACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,SACNM,WAAY,IDpC4BC,KAAKC,IAC/C,MAAMC,EAAWC,EACdC,MAAKC,GAAmBA,EAAgBb,KAAOS,EAAQF,aACpDO,EAAOC,EAAgBH,MAAKI,GAAUA,EAAOhB,KAAOU,EAASL,UAEnE,MAAO,IACFI,EACHK,OACAG,WAAYP,EAHd,IAgCK,MAAMQ,EAAM,KACjB,MAAOC,EAAeC,GAAoBC,mBAAS,KAC5CC,EAAcC,GAAmBF,mBAAS,KAC1CG,EAAkBC,GAAuBJ,mBAAS,IAEnDK,EA9BR,SAAyBC,EAAUC,EAAOC,EAAgBC,GACxD,IAAIC,EAAwB,IAAIJ,GAqBhC,OAnBIC,IACFG,EAAwBA,EAAsBC,QAAOvB,GACnDA,EAAQR,KAAKgC,cACVC,SAASN,EAAMK,cAAcE,WAIhCN,IACFE,EAAwBA,EAAsBC,QAAOvB,GACnDA,EAAQQ,WAAWZ,UAAYwB,KAI/BC,IACFC,EAAwBA,EAAsBC,QAAOvB,GACnDA,EAAQQ,WAAWZ,UAAYyB,KAI5BC,CACR,CAQKK,CACA9B,EACAgB,EACAE,EACAL,GAGJ,OACE,qBAAKkB,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,sBAAKA,UAAU,kCAAf,UACE,mBACE,UAAQ,iBACRC,KAAK,KACLD,UAAWE,IAAG,CAAE,YAA+B,KAAlBpB,IAC7BqB,QAAS,KACPpB,EAAiB,GAAjB,EALJ,iBAWCL,EAAgBP,KAAIM,GACnB,mBACE,UAAQ,aACRwB,KAAK,KAELD,UAAWE,IAAG,CAAE,YAAapB,IAAkBL,EAAKd,KACpDwC,QAAS,KACPpB,EAAiBN,EAAKd,GAAtB,EANJ,SASGc,EAAKb,MANDa,EAAKd,SAWhB,qBAAKqC,UAAU,cAAf,SACE,oBAAGA,UAAU,yCAAb,UACE,uBACE,UAAQ,cACRI,KAAK,OACLJ,UAAU,QACVK,YAAY,SACZC,MAAOrB,EACPsB,SAAWC,IACTtB,EAAgBsB,EAAMC,OAAOH,MAA7B,IAIJ,sBAAMN,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,WAG3C,sBAAMA,UAAU,gBAAhB,SACGf,GACC,wBACE,UAAQ,cACRmB,KAAK,SACLJ,UAAU,SACVG,QAAS,IAAMjB,EAAgB,aAOzC,sBAAKc,UAAU,gCAAf,UACE,mBACEC,KAAK,KACL,UAAQ,gBACRD,UAAU,qCACVG,QAAS,KACPf,EAAoB,GAApB,EALJ,iBAWCd,EAAqBH,KAAIE,GACxB,mBAEE,UAAQ,WACR2B,UAAWE,IAAG,cAAe,CAC3B,eAAgBf,IAAqBd,EAASV,KAEhDsC,KAAK,KACLE,QAAS,KACPf,EAAoBf,EAASV,GAA7B,EARJ,SAWGU,EAASP,OAVLO,EAASV,SAgBpB,qBAAKqC,UAAU,cAAf,SACE,mBACE,UAAQ,iBACRC,KAAK,KACLD,UAAU,0CACVG,QAAS,KACPpB,EAAiB,IACjBG,EAAgB,GAAhB,EANJ,sCAeN,sBAAKc,UAAU,sBAAf,UACE,mBAAG,UAAQ,oBAAX,SAC8B,IAA3BX,EAAgBqB,QACX,2CAGR,wBACE,UAAQ,eACRV,UAAU,0CAFZ,UAIE,gCACE,+BACE,6BACE,uBAAMA,UAAU,8BAAhB,eAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,yBAMxC,6BACE,uBAAMA,UAAU,8BAAhB,oBAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,8BAMxC,6BACE,uBAAMA,UAAU,8BAAhB,qBAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,4BAMxC,6BACE,uBAAMA,UAAU,8BAAhB,iBAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,8BAQ5C,gCACGX,EAAgBlB,KAAIC,GACnB,qBAAqB,UAAQ,UAA7B,UACE,oBAAI4B,UAAU,uBAAuB,UAAQ,YAA7C,SACG5B,EAAQT,KAGX,oBAAI,UAAQ,cAAZ,SAA2BS,EAAQR,OACnC,qBAAI,UAAQ,kBAAZ,UACGQ,EAAQQ,WAAWb,KADtB,IAGGK,EAAQQ,WAAWd,SAGtB,oBACE,UAAQ,cACRkC,UACM,MADK5B,EAAQK,KAAKZ,IACZ,gBAAkB,kBAHhC,SAKGO,EAAQK,KAAKb,SAjBTQ,EAAQT,kBAhL/B,EElDFgD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.d83f5461.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst preparedProducts = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(productCategory => productCategory.id === product.categoryId);\n  const user = usersFromServer.find(person => person.id === category.ownerId);\n\n  return {\n    ...product,\n    user,\n    categories: category,\n  };\n});\n\nfunction getFilteredList(products, query, filterCategory, owner) {\n  let preparedProductisList = [...products];\n\n  if (query) {\n    preparedProductisList = preparedProductisList.filter(product => (\n      product.name.toLowerCase()\n        .includes(query.toLowerCase().trim())\n    ));\n  }\n\n  if (filterCategory) {\n    preparedProductisList = preparedProductisList.filter(product => (\n      product.categories.ownerId === filterCategory\n    ));\n  }\n\n  if (owner) {\n    preparedProductisList = preparedProductisList.filter(product => (\n      product.categories.ownerId === owner\n    ));\n  }\n\n  return preparedProductisList;\n}\n\nexport const App = () => {\n  const [categoryOwner, setCategoryOwner] = useState('');\n  const [filteredName, setFilteredName] = useState('');\n  const [filteredCategory, setFilteredCategory] = useState('');\n\n  const visibleProducts\n    = getFilteredList(\n      preparedProducts,\n      filteredName,\n      filteredCategory,\n      categoryOwner,\n    );\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <div className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={cn({ 'is-active': categoryOwner === '' })}\n                onClick={() => {\n                  setCategoryOwner('');\n                }}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  key={user.id}\n                  className={cn({ 'is-active': categoryOwner === user.id })}\n                  onClick={() => {\n                    setCategoryOwner(user.id);\n                  }}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={filteredName}\n                  onChange={(event) => {\n                    setFilteredName(event.target.value);\n                  }}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                <span className=\"icon is-right\">\n                  {filteredName && (\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setFilteredName('')}\n                    />\n                  )}\n                </span>\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className=\"button is-success mr-6 is-outlined\"\n                onClick={() => {\n                  setFilteredCategory('');\n                }}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a\n                  key={category.id}\n                  data-cy=\"Category\"\n                  className={cn('button mr-2', {\n                    'my-1 is-info': filteredCategory === category.id,\n                  })}\n                  href=\"#/\"\n                  onClick={() => {\n                    setFilteredCategory(category.id);\n                  }}\n                >\n                  {category.title}\n                </a>\n\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => {\n                  setCategoryOwner('');\n                  setFilteredName('');\n                }}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          <p data-cy=\"NoMatchingMessage\">\n            {visibleProducts.length === 0\n              && ('No products matching selected criteria')}\n          </p>\n\n          <table\n            data-cy=\"ProductTable\"\n            className=\"table is-striped is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    ID\n\n                    <a href=\"#/\">\n                      <span className=\"icon\">\n                        <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Product\n\n                    <a href=\"#/\">\n                      <span className=\"icon\">\n                        <i data-cy=\"SortIcon\" className=\"fas fa-sort-down\" />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Category\n\n                    <a href=\"#/\">\n                      <span className=\"icon\">\n                        <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    User\n\n                    <a href=\"#/\">\n                      <span className=\"icon\">\n                        <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {visibleProducts.map(product => (\n                <tr key={product.id} data-cy=\"Product\">\n                  <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                    {product.id}\n                  </td>\n\n                  <td data-cy=\"ProductName\">{product.name}</td>\n                  <td data-cy=\"ProductCategory\">\n                    {product.categories.icon}\n                    -\n                    {product.categories.title}\n                  </td>\n\n                  <td\n                    data-cy=\"ProductUser\"\n                    className={product.user.sex\n                      === 'm' ? 'has-text-link' : 'has-text-danger'}\n                  >\n                    {product.user.name}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}